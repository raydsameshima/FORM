/*
   Wproduction.mac
   Ray D. Sameshima

   see for ctensor(components)
http://maxima.sourceforge.net/docs/manual/maxima_26.html

p1 incoming quark
p[1, 1] = 250.00000000000000;
p[1, 2] = 0.00000000000000;
p[1, 3] = 0.00000000000000;
p[1, 4] = 250.00000000000000;

incoming antiquark
p[2, 1] = 250.00000000000000;
p[2, 2] = 0.00000000000000;
p[2, 3] = 0.00000000000000;
p[2, 4] = -250.00000000000000;

outgoing top quark
p[3, 1] = 177.42516443798704;
p[3, 2] = 28.070273946575000;
p[3, 3] = -12.250542128523813 ;
p[3, 4] = 23.311647603038381;

outgoing antitop
p[4, 1] = 201.68800066843056;
p[4, 2] = -83.325744067637146;
p[4, 3] = -58.807787027215262;
p[4, 4] = -16.681551911172580;

M =

+ prop(2*mt^2 + 2*p3.p4)^2*prop(mw^2 - 2*p2.p3 - 2*p2.p4 + 2*p3.p4 + 
p4.p4)^2*[N^2-1]*mw^-2 * (
- 16*p2.p1*p2.p3*p2.p4*mt^2
+ 16*p2.p1*p2.p3*p3.p4*mt^2
+ 8*p2.p1*p2.p3*p4.p4*mt^2
- 8*p2.p1*p2.p3^2*mt^2
+ 16*p2.p1*p2.p4*p3.p4*mt^2
+ 8*p2.p1*p2.p4*p4.p4*mt^2
- 8*p2.p1*p2.p4^2*mt^2
- 8*p2.p1*p3.p4*p4.p4*mt^2
- 8*p2.p1*p3.p4^2*mt^2
- 2*p2.p1*p4.p4^2*mt^2
+ 16*p2.p3*p2.p4*p1.p3*p3.p4
+ 8*p2.p3*p2.p4*p1.p3*p4.p4
+ 16*p2.p3*p2.p4*p1.p4*p3.p4
+ 8*p2.p3*p2.p4*p1.p4*p4.p4
- 16*p2.p3*p2.p4^2*p1.p3
- 8*p2.p3*p2.p4^2*p1.p4
- 8*p2.p3*p1.p4*p3.p4*p4.p4
- 8*p2.p3*p1.p4*p3.p4^2
- 2*p2.p3*p1.p4*p4.p4^2
- 8*p2.p3^2*p2.p4*p1.p3
- 16*p2.p3^2*p2.p4*p1.p4
+ 16*p2.p3^2*p1.p4*p3.p4
+ 8*p2.p3^2*p1.p4*p4.p4
- 8*p2.p3^3*p1.p4
- 8*p2.p4*p1.p3*p3.p4*p4.p4
- 8*p2.p4*p1.p3*p3.p4^2
- 2*p2.p4*p1.p3*p4.p4^2
+ 16*p2.p4^2*p1.p3*p3.p4
+ 8*p2.p4^2*p1.p3*p4.p4
- 8*p2.p4^3*p1.p3
)

+ prop(2*mt^2 + 2*p3.p4)^2*prop(mw^2 - 2*p2.p3 - 2*p2.p4 + 2*p3.p4 + 
p4.p4)^2*[N^2-1] * (
- 16*p2.p1*p2.p3*p2.p4
+ 8*p2.p1*p2.p3*p3.p4
+ 8*p2.p1*p2.p3*p4.p4
+ 8*p2.p1*p2.p3*mt^2
+ 8*p2.p1*p2.p4*p3.p4
+ 8*p2.p1*p2.p4*mt^2
+ 16*p2.p3*p2.p4*p1.p3
+ 16*p2.p3*p2.p4*p1.p4
- 8*p2.p3*p1.p3*p3.p4
- 8*p2.p3*p1.p3*p4.p4
- 8*p2.p3*p1.p3*mt^2
- 8*p2.p3*p1.p4*p3.p4
- 8*p2.p3*p1.p4*p4.p4
- 8*p2.p3*p1.p4*mt^2
- 8*p2.p4*p1.p3*p3.p4
- 8*p2.p4*p1.p3*mt^2
- 8*p2.p4*p1.p4*p3.p4
- 8*p2.p4*p1.p4*mt^2
)

+ prop(2*mt^2 + 2*p3.p4)^2*prop(mw^2 - 2*p2.p3 - 2*p2.p4 + 2*p3.p4 + 
    p4.p4)^2*[N^2-1]*mw^2 * (
      + 8*p2.p1*p2.p4
      + 2*p2.p1*mt^2
      + 2*p2.p3*p1.p4
      - 6*p2.p4*p1.p3
      - 8*p2.p4*p1.p4
      )

    + prop(2*mt^2 + 2*p3.p4)^2*prop(mw^2 - 2*p2.p3 - 2*p2.p4 + 2*p3.p4 + 
        p4.p4)*prop(mw^2 - 2*p1.p3 - 2*p1.p4 + 2*p3.p4 + p4.p4)*[N^2-1]*mw^-2
    * (
        + 16*p2.p1*p2.p3*p1.p3*mt^2
        + 16*p2.p1*p2.p3*p1.p4*mt^2
        - 16*p2.p1*p2.p3*p3.p4*mt^2
        - 8*p2.p1*p2.p3*p4.p4*mt^2
        + 16*p2.p1*p2.p4*p1.p3*mt^2
        + 16*p2.p1*p2.p4*p1.p4*mt^2
        - 16*p2.p1*p2.p4*p3.p4*mt^2
        - 8*p2.p1*p2.p4*p4.p4*mt^2
        - 16*p2.p1*p1.p3*p3.p4*mt^2
        - 8*p2.p1*p1.p3*p4.p4*mt^2
        - 16*p2.p1*p1.p4*p3.p4*mt^2
        - 8*p2.p1*p1.p4*p4.p4*mt^2
        + 16*p2.p1*p3.p4*p4.p4*mt^2
        + 16*p2.p1*p3.p4^2*mt^2
        + 4*p2.p1*p4.p4^2*mt^2
        + 32*p2.p3*p2.p4*p1.p3*p1.p4
        - 16*p2.p3*p2.p4*p1.p3*p3.p4
        - 8*p2.p3*p2.p4*p1.p3*p4.p4
        + 16*p2.p3*p2.p4*p1.p3^2
        - 16*p2.p3*p2.p4*p1.p4*p3.p4
    - 8*p2.p3*p2.p4*p1.p4*p4.p4
    + 16*p2.p3*p2.p4*p1.p4^2
    - 16*p2.p3*p1.p3*p1.p4*p3.p4
    - 8*p2.p3*p1.p3*p1.p4*p4.p4
    + 16*p2.p3*p1.p4*p3.p4*p4.p4
    + 16*p2.p3*p1.p4*p3.p4^2
    + 4*p2.p3*p1.p4*p4.p4^2
    - 16*p2.p3*p1.p4^2*p3.p4
    - 8*p2.p3*p1.p4^2*p4.p4
    + 16*p2.p3^2*p1.p3*p1.p4
    - 16*p2.p3^2*p1.p4*p3.p4
    - 8*p2.p3^2*p1.p4*p4.p4
    + 16*p2.p3^2*p1.p4^2
    - 16*p2.p4*p1.p3*p1.p4*p3.p4
    - 8*p2.p4*p1.p3*p1.p4*p4.p4
    + 16*p2.p4*p1.p3*p3.p4*p4.p4
    + 16*p2.p4*p1.p3*p3.p4^2
    + 4*p2.p4*p1.p3*p4.p4^2
    - 16*p2.p4*p1.p3^2*p3.p4
    - 8*p2.p4*p1.p3^2*p4.p4
    + 16*p2.p4^2*p1.p3*p1.p4
    - 16*p2.p4^2*p1.p3*p3.p4
    - 8*p2.p4^2*p1.p3*p4.p4
    + 16*p2.p4^2*p1.p3^2
    )

    + prop(2*mt^2 + 2*p3.p4)^2*prop(mw^2 - 2*p2.p3 - 2*p2.p4 + 2*p3.p4 + 
        p4.p4)*prop(mw^2 - 2*p1.p3 - 2*p1.p4 + 2*p3.p4 + p4.p4)*[N^2-1] * (
          + 16*p2.p1*p2.p3*p1.p4
          + 8*p2.p1*p2.p3*p3.p4
          - 8*p2.p1*p2.p3*p4.p4
          + 8*p2.p1*p2.p3*mt^2
          + 16*p2.p1*p2.p4*p1.p3
          + 8*p2.p1*p2.p4*p3.p4
          + 8*p2.p1*p2.p4*mt^2
          + 8*p2.p1*p1.p3*p3.p4
          - 8*p2.p1*p1.p3*p4.p4
          + 8*p2.p1*p1.p3*mt^2
          + 8*p2.p1*p1.p4*p3.p4
          + 8*p2.p1*p1.p4*mt^2
          - 8*p2.p1*p3.p4*p4.p4
          - 16*p2.p1*p3.p4*mt^2
          - 16*p2.p1*p3.p4^2
          - 8*p2.p1*p4.p4*mt^2
          - 16*p2.p1^2*p3.p4
          - 16*p2.p1^2*mt^2
          + 16*p2.p3*p1.p4*p3.p4
          + 8*p2.p3*p1.p4*p4.p4
        - 16*p2.p3*p1.p4^2
        - 16*p2.p3^2*p1.p4
        + 16*p2.p4*p1.p3*p3.p4
        + 8*p2.p4*p1.p3*p4.p4
        - 16*p2.p4*p1.p3^2
        - 16*p2.p4^2*p1.p3
        )

        + prop(2*mt^2 + 2*p3.p4)^2*prop(mw^2 - 2*p2.p3 - 2*p2.p4 + 2*p3.p4 + 
            p4.p4)*prop(mw^2 - 2*p1.p3 - 2*p1.p4 + 2*p3.p4 + p4.p4)*[N^2-1]*mw^2
        * (
            - 8*p2.p1*p2.p4
            - 8*p2.p1*p1.p4
            - 8*p2.p1*p3.p4
            - 12*p2.p1*mt^2
            + 4*p2.p3*p1.p4
            + 4*p2.p4*p1.p3
          )

        + prop(2*mt^2 + 2*p3.p4)^2*prop(mw^2 - 2*p1.p3 - 2*p1.p4 + 2*p3.p4 + 
            p4.p4)^2*[N^2-1]*mw^-2 * (
              - 16*p2.p1*p1.p3*p1.p4*mt^2
              + 16*p2.p1*p1.p3*p3.p4*mt^2
              + 8*p2.p1*p1.p3*p4.p4*mt^2
              - 8*p2.p1*p1.p3^2*mt^2
              + 16*p2.p1*p1.p4*p3.p4*mt^2
              + 8*p2.p1*p1.p4*p4.p4*mt^2
              - 8*p2.p1*p1.p4^2*mt^2
              - 8*p2.p1*p3.p4*p4.p4*mt^2
              - 8*p2.p1*p3.p4^2*mt^2
              - 2*p2.p1*p4.p4^2*mt^2
              + 16*p2.p3*p1.p3*p1.p4*p3.p4
              + 8*p2.p3*p1.p3*p1.p4*p4.p4
              - 16*p2.p3*p1.p3*p1.p4^2
              - 8*p2.p3*p1.p3^2*p1.p4
              - 8*p2.p3*p1.p4*p3.p4*p4.p4
              - 8*p2.p3*p1.p4*p3.p4^2
              - 2*p2.p3*p1.p4*p4.p4^2
              + 16*p2.p3*p1.p4^2*p3.p4
              + 8*p2.p3*p1.p4^2*p4.p4
              - 8*p2.p3*p1.p4^3
            + 16*p2.p4*p1.p3*p1.p4*p3.p4
            + 8*p2.p4*p1.p3*p1.p4*p4.p4
            - 8*p2.p4*p1.p3*p1.p4^2
            - 8*p2.p4*p1.p3*p3.p4*p4.p4
            - 8*p2.p4*p1.p3*p3.p4^2
            - 2*p2.p4*p1.p3*p4.p4^2
            - 16*p2.p4*p1.p3^2*p1.p4
            + 16*p2.p4*p1.p3^2*p3.p4
            + 8*p2.p4*p1.p3^2*p4.p4
            - 8*p2.p4*p1.p3^3
            )

            + prop(2*mt^2 + 2*p3.p4)^2*prop(mw^2 - 2*p1.p3 - 2*p1.p4 + 2*p3.p4 + 
                p4.p4)^2*[N^2-1] * (
                  - 16*p2.p1*p1.p3*p1.p4
                  + 8*p2.p1*p1.p3*p3.p4
                  + 8*p2.p1*p1.p3*p4.p4
                  + 8*p2.p1*p1.p3*mt^2
                  + 8*p2.p1*p1.p4*p3.p4
                  + 8*p2.p1*p1.p4*mt^2
                  + 16*p2.p3*p1.p3*p1.p4
                  - 8*p2.p3*p1.p3*p3.p4
                  - 8*p2.p3*p1.p3*p4.p4
                  - 8*p2.p3*p1.p3*mt^2
                  - 8*p2.p3*p1.p4*p3.p4
                  - 8*p2.p3*p1.p4*mt^2
                  + 16*p2.p4*p1.p3*p1.p4
                  - 8*p2.p4*p1.p3*p3.p4
                  - 8*p2.p4*p1.p3*p4.p4
                  - 8*p2.p4*p1.p3*mt^2
                  - 8*p2.p4*p1.p4*p3.p4
                  - 8*p2.p4*p1.p4*mt^2
                  )

                + prop(2*mt^2 + 2*p3.p4)^2*prop(mw^2 - 2*p1.p3 - 2*p1.p4 + 2*p3.p4 + 
                    p4.p4)^2*[N^2-1]*mw^2 * (
                      + 8*p2.p1*p1.p4
                      + 2*p2.p1*mt^2
                      - 6*p2.p3*p1.p4
                      + 2*p2.p4*p1.p3
                      - 8*p2.p4*p1.p4
                      );
*/
